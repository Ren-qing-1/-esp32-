from machine import Pin, I2C
import sh1106
import time

# 屏幕对象
i2c = I2C(scl=Pin(14), sda=Pin(12))  # 创建i2c对象
display = sh1106.SH1106_I2C(128, 64, i2c)  # 创建oled

# 图片字典
pic_list = {
    '00':
        [0x00, 0x00, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x79, 0x7C, 0xFE, 0xFF, 0xFF, 0xFF,
         0x70, 0xF8, 0xF8, 0xFE, 0xFE, 0xFE, 0xFE, 0xFE, 0xFE, 0xFE, 0xFE, 0xFE, 0x78, 0x00, 0x8F, 0x9F],  # logo左上
    '01':
        [0x0E, 0x1F, 0x1F, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x1E, 0x00, 0xF1, 0xF9,
         0x00, 0x00, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x9E, 0x3E, 0x7F, 0xFF, 0xFF, 0xFF],  # logo右上
    '10':
        [0xFF, 0xFE, 0x7C, 0x39, 0x03, 0x07, 0x0F, 0x0F, 0x0F, 0x0F, 0x0F, 0x0F, 0x03, 0x01, 0x01, 0x00,
         0x3F, 0x7F, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFE, 0xFC, 0xF8],  # logo左下
    '11':
        [0xFC, 0xFE, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x7F, 0x3F, 0x1F,
         0xFE, 0x7E, 0x3E, 0x9C, 0xC0, 0xE0, 0xF0, 0xF0, 0xF0, 0xF0, 0xF0, 0xF0, 0xC0, 0x80, 0x80, 0x00]  # logo右下
}

# 汉字字典
fonts = {
    '宠': [2, 1, 127, 64, 132, 4, 4, 255, 4, 8, 8, 16, 16, 32, 65, 134, 0, 0, 254, 2, 36, 16, 16, 254, 128, 136, 144,
          160, 194, 130, 130, 126],
    '物': [16, 16, 80, 80, 125, 82, 144, 16, 28, 241, 82, 16, 16, 16, 17, 16, 128, 128, 128, 252, 84, 84, 84, 148, 148,
          36, 36, 68, 68, 132, 40, 16],
    '自': [1, 2, 4, 31, 16, 16, 16, 31, 16, 16, 31, 16, 16, 16, 31, 16, 0, 0, 0, 240, 16, 16, 16, 240, 16, 16, 240, 16,
          16, 16, 240, 16],
    '动': [0, 0, 124, 0, 1, 0, 254, 32, 32, 32, 72, 68, 253, 69, 2, 4, 64, 64, 64, 64, 252, 68, 68, 68, 68, 132, 132,
          132, 4, 4, 40, 16],
    '喂': [0, 3, 122, 74, 75, 74, 74, 75, 72, 79, 122, 74, 2, 2, 3, 2, 0, 248, 72, 72, 248, 72, 72, 248, 0, 254, 64, 68,
          40, 144, 8, 6],
    '食': [1, 2, 4, 10, 49, 223, 16, 31, 16, 31, 16, 17, 16, 18, 20, 24, 0, 128, 64, 32, 24, 246, 16, 240, 16, 240, 8,
          144, 96, 16, 8, 4],
    '器': [0, 62, 34, 34, 62, 1, 1, 255, 2, 12, 48, 192, 62, 34, 34, 62, 0, 124, 68, 68, 124, 32, 16, 254, 128, 96, 24,
          6, 124, 68, 68, 124],
    '指': [17, 17, 17, 17, 253, 17, 16, 20, 25, 49, 209, 17, 17, 17, 81, 33, 0, 4, 56, 192, 2, 2, 254, 0, 252, 4, 4, 252,
          4, 4, 252, 4],
    '导': [0, 63, 32, 32, 63, 32, 32, 31, 0, 0, 255, 8, 4, 4, 0, 0, 0, 240, 16, 16, 240, 4, 4, 252, 32, 32, 254, 32, 32,
          32, 160, 64],
    '老': [2, 2, 63, 2, 2, 255, 1, 2, 12, 24, 47, 72, 136, 8, 7, 0, 0, 8, 208, 32, 64, 254, 0, 0, 16, 224, 0, 8, 8, 8,
          248, 0],
    '师': [8, 11, 72, 72, 72, 73, 73, 73, 73, 73, 73, 9, 17, 16, 32, 64, 0, 254, 32, 32, 32, 252, 36, 36, 36, 36, 36, 52,
          40, 32, 32, 32],
    '：': [0, 0, 0, 0, 0, 0, 0, 0, 0, 48, 48, 0, 48, 48, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
    '李': [1, 1, 127, 3, 5, 9, 49, 193, 15, 0, 0, 255, 1, 1, 5, 2, 0, 0, 252, 128, 64, 32, 24, 6, 224, 64, 128, 254, 0,
          0, 0, 0],
    '强': [0, 249, 9, 9, 9, 120, 64, 67, 66, 122, 11, 8, 8, 8, 87, 32, 0, 252, 4, 4, 252, 32, 32, 254, 34, 34, 254, 32,
          36, 34, 254, 2],
    '学': [34, 17, 17, 0, 127, 64, 128, 31, 0, 1, 255, 1, 1, 1, 5, 2, 8, 8, 16, 32, 254, 2, 4, 224, 64, 128, 254, 0, 0,
          0, 0, 0],
    '生': [1, 17, 17, 17, 63, 33, 65, 129, 1, 63, 1, 1, 1, 1, 255, 0, 0, 0, 0, 0, 252, 0, 0, 0, 0, 248, 0, 0, 0, 0, 254,
          0],
    '汤': [0, 35, 16, 16, 128, 65, 67, 17, 17, 33, 226, 34, 36, 40, 33, 2, 0, 240, 32, 64, 128, 0, 252, 36, 36, 36, 36,
          68, 68, 132, 40, 16],
    '玉': [0, 127, 1, 1, 1, 1, 1, 63, 1, 1, 1, 1, 1, 1, 255, 0, 0, 252, 0, 0, 0, 0, 0, 248, 0, 0, 32, 16, 16, 0, 254, 0],
    '杰': [1, 1, 1, 127, 3, 5, 9, 17, 33, 193, 1, 0, 36, 34, 66, 128, 0, 0, 0, 252, 128, 64, 32, 16, 8, 6, 0, 0, 136, 68,
          68, 4],
    '设': [0, 33, 17, 17, 1, 2, 244, 19, 17, 17, 16, 20, 24, 16, 3, 12, 0, 240, 16, 16, 16, 14, 0, 248, 8, 16, 144, 160,
          64, 160, 24, 6],
    '置': [127, 68, 127, 1, 127, 1, 31, 16, 31, 16, 31, 16, 31, 16, 255, 0, 252, 68, 252, 0, 252, 0, 240, 16, 240, 16,
          240, 16, 240, 16, 254, 0],
    '投': [16, 16, 16, 16, 252, 17, 18, 21, 24, 48, 208, 16, 16, 16, 80, 35, 0, 248, 136, 136, 136, 6, 0, 252, 132, 132,
          72, 80, 32, 80, 136, 6],
    '饲': [32, 35, 32, 60, 71, 72, 160, 35, 34, 34, 34, 35, 40, 48, 32, 0, 0, 252, 4, 4, 244, 4, 4, 228, 36, 36, 36, 228,
          4, 4, 20, 8],
    '料': [8, 8, 74, 42, 44, 8, 254, 24, 28, 42, 42, 72, 136, 8, 8, 8, 8, 136, 72, 72, 8, 136, 72, 72, 8, 14, 248, 8, 8,
          8, 8, 8],
    '无': [0, 63, 2, 2, 2, 2, 127, 4, 4, 4, 8, 8, 16, 32, 64, 128, 0, 240, 0, 0, 0, 0, 252, 128, 128, 128, 128, 128, 132,
          132, 124, 0],
    '线': [16, 16, 32, 36, 69, 248, 16, 35, 64, 252, 64, 0, 28, 224, 67, 0, 80, 72, 64, 92, 224, 64, 94, 224, 68, 72, 48,
          34, 82, 138, 6, 2],
    '关': [16, 8, 8, 0, 63, 1, 1, 1, 255, 1, 2, 2, 4, 8, 48, 192, 16, 16, 32, 0, 248, 0, 0, 0, 254, 0, 128, 128, 64, 32,
          24, 6],
    '于': [0, 63, 1, 1, 1, 1, 255, 1, 1, 1, 1, 1, 1, 1, 5, 2, 0, 248, 0, 0, 0, 0, 254, 0, 0, 0, 0, 0, 0, 0, 0, 0],
    '本': [1, 1, 1, 1, 127, 3, 5, 5, 9, 17, 33, 79, 129, 1, 1, 1, 0, 0, 0, 0, 252, 128, 64, 64, 32, 16, 8, 228, 2, 0, 0,
          0],
    '机': [16, 17, 17, 17, 253, 17, 49, 57, 85, 85, 145, 17, 17, 18, 18, 20, 0, 240, 16, 16, 16, 16, 16, 16, 16, 16, 16,
          18, 18, 18, 14, 0],
    '添': [0, 35, 16, 16, 135, 64, 65, 18, 20, 32, 224, 34, 34, 36, 33, 0, 0, 252, 64, 64, 254, 160, 16, 8, 70, 64, 72,
          100, 82, 82, 64, 128],
    '加': [16, 16, 16, 16, 254, 18, 18, 18, 18, 18, 18, 18, 34, 34, 74, 132, 0, 0, 0, 124, 68, 68, 68, 68, 68, 68, 68,
          68, 68, 124, 68, 0],
    '保': [8, 11, 10, 18, 18, 51, 48, 80, 151, 16, 17, 18, 20, 24, 16, 16, 0, 248, 8, 8, 8, 248, 64, 64, 252, 224, 80,
          72, 68, 66, 64, 64],
    '存': [4, 4, 255, 8, 8, 19, 16, 48, 80, 151, 16, 16, 16, 16, 17, 16, 0, 0, 254, 0, 0, 248, 16, 32, 64, 254, 64, 64,
          64, 64, 64, 128],
    '不': [0, 127, 0, 0, 1, 1, 3, 5, 9, 17, 33, 65, 129, 1, 1, 1, 0, 252, 128, 128, 0, 0, 64, 32, 16, 8, 4, 4, 0, 0, 0,
          0],
    '足': [0, 31, 16, 16, 16, 16, 31, 1, 1, 17, 17, 17, 41, 37, 67, 128, 0, 240, 16, 16, 16, 16, 240, 0, 0, 0, 248, 0, 0,
          0, 254, 0],
    '提': [16, 17, 17, 17, 253, 17, 17, 21, 24, 51, 208, 17, 17, 17, 82, 36, 0, 252, 4, 4, 252, 4, 4, 252, 0, 254, 32,
          32, 60, 32, 160, 126],
    '醒': [0, 254, 40, 40, 254, 170, 170, 170, 174, 194, 130, 254, 130, 130, 254, 130, 0, 124, 68, 124, 68, 124, 16, 80,
          124, 144, 16, 124, 16, 16, 254, 0],
    '开': [0, 127, 8, 8, 8, 8, 8, 255, 8, 8, 8, 8, 16, 16, 32, 64, 0, 252, 32, 32, 32, 32, 32, 254, 32, 32, 32, 32, 32,
          32, 32, 32],
    '超': [8, 9, 8, 126, 8, 8, 255, 8, 40, 40, 46, 40, 40, 88, 79, 128, 0, 252, 68, 68, 68, 148, 8, 252, 132, 132, 132,
          252, 0, 0, 254, 0],
    '时': [0, 0, 124, 68, 69, 68, 68, 124, 68, 68, 68, 68, 124, 68, 0, 0, 8, 8, 8, 8, 254, 8, 8, 8, 136, 72, 72, 8, 8, 8,
          40, 16],
    '放': [32, 16, 0, 254, 32, 33, 62, 36, 36, 36, 36, 36, 68, 84, 137, 2, 64, 64, 64, 128, 254, 8, 136, 136, 136, 80,
          80, 32, 80, 136, 4, 2],
    '未': [1, 1, 1, 63, 1, 1, 1, 255, 3, 5, 9, 17, 33, 193, 1, 1, 0, 0, 0, 248, 0, 0, 0, 254, 128, 64, 32, 16, 8, 6, 0,
          0],
    '进': [0, 32, 16, 19, 0, 0, 240, 23, 16, 16, 17, 17, 18, 40, 71, 0, 144, 144, 144, 252, 144, 144, 144, 254, 144, 144,
          16, 16, 16, 0, 254, 0],
    '蓝': [8, 8, 255, 8, 4, 36, 36, 36, 37, 0, 63, 36, 36, 36, 255, 0, 32, 32, 254, 32, 128, 128, 252, 160, 16, 0, 248,
          72, 72, 72, 254, 0],
    '牙': [0, 63, 0, 0, 16, 16, 32, 63, 1, 2, 4, 8, 16, 96, 1, 0, 0, 252, 64, 64, 64, 64, 64, 254, 64, 64, 64, 64, 64,
          64, 64, 128],
    '小': [1, 1, 1, 1, 1, 17, 17, 17, 33, 33, 65, 129, 1, 1, 5, 2, 0, 0, 0, 0, 0, 16, 8, 4, 4, 2, 2, 2, 0, 0, 0, 0],
    '程': [8, 29, 241, 17, 17, 253, 16, 48, 57, 84, 84, 145, 16, 16, 19, 16, 0, 252, 4, 4, 4, 252, 0, 0, 254, 32, 32,
          252, 32, 32, 254, 0],
    '序': [1, 0, 63, 32, 35, 32, 32, 32, 47, 32, 32, 32, 64, 64, 129, 0, 0, 128, 254, 0, 248, 16, 160, 64, 254, 66, 68,
          64, 64, 64, 64, 128],
    '二': [0, 0, 0, 63, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 248, 0, 0, 0, 0, 0, 0, 0, 0, 254, 0, 0, 0],
    '维': [16, 16, 32, 37, 69, 251, 21, 33, 65, 253, 65, 1, 29, 225, 65, 1, 160, 144, 128, 254, 16, 16, 252, 16, 16, 252,
          16, 16, 16, 254, 0, 0],
    '码': [0, 1, 252, 16, 16, 32, 60, 100, 100, 164, 36, 37, 60, 36, 32, 0, 0, 248, 8, 8, 136, 136, 136, 254, 2, 2, 2,
          250, 2, 2, 20, 8],
    '连': [0, 32, 23, 16, 0, 1, 243, 16, 16, 16, 23, 16, 16, 40, 71, 0, 64, 64, 254, 128, 160, 32, 252, 32, 32, 32, 254, 32, 32, 32, 254, 0],
    '接': [16, 16, 19, 16, 253, 16, 23, 16, 24, 55, 208, 17, 16, 16, 81, 38, 128, 64, 252, 0, 8, 144, 254, 64, 64, 254, 136, 8, 144, 96, 152, 4],
    '配': [0, 254, 40, 40, 254, 170, 170, 170, 174, 194, 130, 254, 130, 130, 254, 130, 0, 0, 248, 8, 8, 8, 8, 248, 136, 128, 128, 128, 130, 130, 126, 0],
    '网': [0, 127, 64, 64, 66, 82, 74, 68, 68, 74, 74, 82, 97, 64, 64, 64, 0, 252, 4, 4, 20, 148, 84, 36, 36, 84, 84, 148, 4, 4, 20, 8],
    '络': [16, 16, 32, 33, 75, 252, 16, 32, 65, 250, 69, 1, 25, 225, 65, 1, 128, 128, 248, 8, 16, 160, 64, 160, 24, 6, 248, 8, 8, 8, 248, 8]
    }


# 函数部分
# 检查是否为中文字符串
def ischinese(check_str):
    for ch in check_str:
        if u'\u4e00' <= ch <= u'\u9fff':
            return True
        else:
            return False


# 检索字典显示图片
def pic(ch_str, x_axis, y_axis):
    offset_ = 0
    byte_data = pic_list[ch_str]
    for y in range(0, 16):
        a_ = bin(byte_data[y]).replace('0b', '')
        while len(a_) < 8:
            a_ = '0' + a_
        b_ = bin(byte_data[y + 16]).replace('0b', '')
        while len(b_) < 8:
            b_ = '0' + b_
        for x in range(0, 8):
            display.pixel(x_axis + offset_ + x, y + y_axis, int(a_[x]))
            display.pixel(x_axis + offset_ + x + 8, y + y_axis, int(b_[x]))
    offset_ += 16


# 图片显示函数
def start_page1():
    pic('00', 49, 2)
    pic('01', 65, 2)
    pic('10', 49, 18)
    pic('11', 65, 18)
    chinese('宠', 8, 35)
    chinese('物', 25, 35)
    chinese('自', 42, 35)
    chinese('动', 59, 35)
    chinese('喂', 76, 35)
    chinese('食', 93, 35)
    chinese('器', 110, 35)


# 检索字典显示汉字
def chinese(ch_str, x_axis, y_axis):
    offset_ = 0
    for k in ch_str:
        byte_data = fonts[k]
        for y in range(0, 16):
            a_ = bin(byte_data[y]).replace('0b', '')
            while len(a_) < 8:
                a_ = '0' + a_
            b_ = bin(byte_data[y + 16]).replace('0b', '')
            while len(b_) < 8:
                b_ = '0' + b_
            for x in range(0, 8):
                display.pixel(x_axis + offset_ + x, y + y_axis, int(a_[x]))
                display.pixel(x_axis + offset_ + x + 8, y + y_axis, int(b_[x]))
        offset_ += 16


# 初始界面显示
def oled_start():
    display.fill_rect(0, 0, 128, 64, 0)
    # display.init_display()  # 重置屏幕

    # 显示开始界面1
    start_page1()  # 设置开始界面1
    display.show()  # 显示
    time.sleep(1)
    # display.init_display()  # 重置屏幕
    display.fill_rect(0, 0, 128, 64, 0)

    # 显示开始界面2
    chinese('指导老师：李强', 1, 8)  # 设置开始界面2
    chinese('学生：汤玉杰', 1, 40)
    display.show()  # 显示
    time.sleep(1)


# 主体界面显示
def oled_body(web_txt=None, time_list=None, key=None):
    display.fill_rect(0, 0, 128, 64, 0)  # 重置屏幕
    display.text(web_txt[0], 0, 0)  # 显示状态栏时间
    display.text(('Link:' + web_txt[1]), 64, 0)  # 显示状态栏wifi连接状态
    display.hline(0, 7, 128, 1)  # 显示状态栏分割线

    display.text('-|' + time_list[str(int(key))][0], 0, 20)
    display.text(time_list[str(int(key))][1] + 'g ', 64, 20)
    display.text(time_list[str(int(key))][2], 104, 20)
    if int(key) - 1 > 0:
        display.text(' |' + time_list[str(int(key) - 1)][0], 0, 10)
        display.text(time_list[str(int(key) - 1)][1] + 'g ', 64, 10)
        display.text(time_list[str(int(key) - 1)][2], 104, 10)
    else:
        display.text(' |' + '--:-- ---g --', 0, 10)
    if (int(key) + 1) < len(time_list):
        display.text(' |' + time_list[str(int(key) + 1)][0], 0, 30)
        display.text(time_list[str(int(key) + 1)][1], 64, 30)
        display.text(time_list[str(int(key) + 1)][2], 104, 30)
    else:
        display.text(' |' + '--:-- ---g --', 0, 30)
    display.hline(0, 40, 128, 1)  # 显示主体栏分割线

    # 显示设置
    display.text('->', 0, 47)
    chinese('设置', 16, 43)
    display.show()


# 设置界面显示
def oled_set(set_list=None):
    if set_list:
        display.fill_rect(0, 0, 128, 64, 0)
        # display.init_display()  # 重置屏幕
        # set_list = ['投喂设置', '饲料设置', '无线设置', '关于本机', 2]
        key = set_list.pop()  # 去除最后一个元素
        for i in range(len(set_list)):
            if ischinese(set_list[i]):  # 判断显示字符串是否为中文
                chinese(set_list[i], 16, i * 16)
            else:
                display.text(set_list[i], 16, i * 16)

            if key == (i + 1):  # 在选中的项前显示'->'
                display.text('->', 0, i * 16)
            else:
                display.text(' |', 0, i * 16)

        display.show()
    else:
        pass


# 重置oled屏幕
def oled_reset():
    display.fill_rect(0, 0, 128, 64, 0)


# 模块测试代码
if __name__ == '__main__':
    oled_start()
    oled_body()
    time.sleep(1)
    set_list = ['投喂设置', '饲料设置', '无线设置', '关于本机', 2]
    oled_set(set_list)
    time.sleep(1)
    set_list = ['添加', '--:-- ---g --', 1]
    oled_set(set_list)
    set_list = ['--:--', '---g', '--', '保存', 1]
    oled_set(set_list)
    time.sleep(1)
    set_list = ['不足提醒：开', '超时提醒：开', '未进食提醒：开', 1]
    oled_set(set_list)
    time.sleep(1)
    set_list = ['蓝牙：开', 'wifi:', '小程序二维码', 1]
    oled_set(set_list)
    time.sleep(1)
    set_list = ['宠物自动喂食器', '指导老师：李强', '学生：汤玉杰', '2023-1-10 V1.0', 1]
    oled_set(set_list)
    time.sleep(1)
